resilience4j:
  circuitbreaker:
    configs:
      default:
        ringBufferSizeInClosedState: 5 # 熔断器关闭时的缓冲区大小
        ringBufferSizeInHalfOpenState: 2 # 熔断器半开时的缓冲区大小
        waitDurationInOpenState: 5000 # 熔断器从打开到半开需要的时间
        failureRateThreshold: 60 # 熔断器打开的失败阈值
        eventConsumerBufferSize: 10 # 事件缓冲区大小
        registerHealthIndicator: true # 健康监测
        automaticTransitionFromOpenToHalfOpenEnabled: true # 是否自动从打开到半开，不需要触发
        recordFailurePredicate: com.honeycomb.resilience4j.demo.exception.RecordFailurePredicate # 谓词设置异常是否为失败
        recordExceptions: # 记录的异常
          - com.honeycomb.resilience4j.demo.exception.BusinessBException
          - com.honeycomb.resilience4j.demo.exception.BusinessAException
        ignoreExceptions: # 忽略的异常
          - com.honeycomb.resilience4j.demo.exception.BusinessAException
    instances:
      backendA:
        baseConfig: default
        waitDurationInOpenState: 5000
        failureRateThreshold: 20
      backendB:
        baseConfig: default
  timelimiter:
    timeoutDuration: 3000 # 超时时长
    cancelRunningFuture: true # 发生异常是否关闭线程
  retry:
    configs:
      default:
        maxRetryAttempts: 3               # 最大重试次数
        waitDuration: 2s                 # 固定重试间隔
        enableExponentialBackoff: false    # 是否允许使用指数退避算法进行重试间隔时间的计算
        expontialBackoffMultiplier: 2     # 指数退避算法的乘数
        enableRandomizedWait: false       # 是否允许使用随机的重试间隔
        randomizedWaitFactor: 0.5         # 随机因子
        resultPredicate: com.honeycomb.resilience4j.demo.exception.RetryOnResultPredicate  # 自定义结果重试规则，需要重试的返回true
        retryExceptionPredicate: com.honeycomb.resilience4j.demo.exception.RetryOnExceptionPredicate  # 自定义异常重试规则，需要重试的返回true
        retryExceptions:                  # 需要重试的异常列表
          - com.honeycomb.resilience4j.demo.exception.BusinessBException
          - com.honeycomb.resilience4j.demo.exception.BusinessAException
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException
        ignoreExceptions:                 # 需要忽略的异常列表
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException
      instances:
        backendA:
          baseConfig: default
          waitDuration: 5s
        backendB:
          baseConfig: default
          maxRetryAttempts: 2

server:
  port: 8088